name: "management cluster terraform destroy and delete workspace"

on:
  workflow_call:
    inputs:
      workspace:
        required: true
        type: string
      var_file:
        required: true
        type: string
      environment:
        required: true
        type: string
    secrets:
      tf_api_token:
        required: true

jobs:
  terraform:
    name: "Terraform"
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}


    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
    defaults:
      run:
        shell: bash

    steps:
      # Checkout the repository to the GitHub Actions runner
      - name: Checkout
        uses: actions/checkout@v3

      # Install the latest version of Terraform CLI and configure the Terraform CLI configuration file with a Terraform Cloud user API token
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          cli_config_credentials_token: ${{ secrets.tf_api_token }}

      # Selecting correct workspace
      - name: Terraform Workspace Select
        run: terraform workspace select ${{ inputs.workspace }}

      # Initialize a new or existing Terraform working directory by creating initial files, loading any remote state, downloading modules, etc.
      - name: Terraform Init
        run: terraform init

      # Destroy
      - name: Terraform Destroy
        run: terraform destroy -auto-approve

      - name: Terraform Workspace delete
        run: terraform workspace delete -force ${{ inputs.workspace }}
